//! `SeaORM` Entity, @generated by sea-orm-codegen 2.0.0-rc.6

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "ARTICLES")]
pub struct Model {
    #[sea_orm(
        column_name = "ID",
        primary_key,
        auto_increment = false,
        column_type = "Uuid"
    )]
    pub id: Uuid,
    #[sea_orm(column_name = "TIME", column_type = "Text")]
    pub time: String,
    #[sea_orm(column_name = "CONTRIBUTOR", column_type = "Text")]
    pub contributor: String,
    #[sea_orm(column_name = "LINE", column_type = "Text")]
    pub line: String,
    #[sea_orm(column_name = "UNSURE")]
    pub unsure: bool,
    #[sea_orm(column_name = "SENSITIVE")]
    pub sensitive: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
